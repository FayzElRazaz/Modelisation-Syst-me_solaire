# -*- coding: utf-8 -*-
"""
Created on Sun Mar 13 18:29:19 2022

@author: FaYzerR
"""
#			d_r3 = (dx**2 + dy**2 + dz**2 + theta**2)**(-1.5)

import numpy as np

#Calcul de la force
def A(r,m,G):
    N = r.shape[0]
    a = np.zeros((N,3))
    for i in range(N):
        for j in range(N):
            if (j==i):
                continue
            else:
                dx = r[j,0]-r[i,0]
                dy = r[j,1]-r[i,1]
                dz = r[j,2]-r[i,2]
                d = (dx**2+dy**2+dz**2)**(-1.5)
                a[i,0] += G*(dx*d)*m[j]
                a[i,1] += G*(dx*d)*m[j]
                a[i,2] += G*(dx*d)*m[j]
    return a

#Initialisation random des coordonnées
def init_coord():
    return np.random.normal(0,1,3)

N = 10

r = np.empty([N,3])
v = np.empty([N,3])
a = np.zeros([N,3])

#Cas où tous les corps ont même masse
m = np.ones(N)
#Cas où les poids sont réparties de façon aléatoires

#Remplissage initial
for i in range(r.shape[0]):
    r[i] = init_coord()

for i in range(v.shape[0]):
    v[i] = init_coord()

T=1000
dt = 0.1
G = 1.0
t = 0

POS = np.empty([N,3,T])
#Saute mouton - leapfrog

for i in range(T):
    v = v+a*dt/2.0
    r = r+dt*v
    a = A(r,m,G)
    v = v+dt/2.0*a
    t = t+dt
    POS[:,0,i] = r[:,0]
    POS[:,1,i] = r[:,1]
    POS[:,2,i] = r[:,2]

POS
